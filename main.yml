---
- name: Changing hostame
  hosts: all
  tasks:
    - hostname:
        name: "{{ host_name }}"
      become: yes
      
- name: Installing packages
  hosts: all
  tasks:
  - name: Install package https provider
    package:
      name: apt-transport-https
      state: latest
    become: yes

  - name: install some packages
    package:
      name: "{{ item }}"
      state: latest
    with_items:
      - curl
      - git
      - apache2
      - openjdk-8-jdk
      - python
      - python-apt
      - python3-apt
      - python-pip
      - virtualenv
      - mysql-client
      - default-libmysqlclient-dev
    become: yes


- name: Install docker
  hosts: all
  tasks:
    - name: "Add docker hug gpg key"
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
      become: yes

    - name: "Add dockerhub repository"
      apt_repository: 
        repo: deb [arch=amd64] https://download.docker.com/linux/debian/ stretch stable
        state: present
      become: yes
    
    - name: "Install docker"
      package: 
        name: docker-ce
        state: present
      become: yes
  
- name: Installing jenkins
  hosts: all
  vars:
    jenkins_version: '{{ version_jenkins }}'
    jenkins_package_state: "present"
    jenkins_http_port: '{{ port_jenkins }}'
    jenkins_admin_username: '{{ user_jenkins }}'
    jenkins_admin_password: '{{ password_jenkins }}'
    jenkins_plugins: ["cloverphp", "cobertura", "docker-workflow", "embeddable-build-status", "jdepend", "analysis-collector", "xunit", "violations"]
  roles:
    - role: geerlingguy.jenkins
      become: true

- name: Initialization of services hosted by docker
  hosts: all
  tasks:
    - name: "Installing required packages for services creation (pip)"
      pip:
        name: "{{ item }}"
      with_items:
        - docker-py
        - MySQL-python
      become: yes

    - name: "Downloaded docker images"
      docker_image:
        name: "{{ item }}"
      with_items:
        - selenium/hub
        - linuxserver/piwigo
        - nextcloud
      become: yes

    - name: "Creating selenium hub container"
      docker_container:
        name: selenium-hub
        image: selenium/hub
        state: started
        recreate: yes
        restart: yes
        published_ports:
          - "4444:4444"
      become: yes

    - user: 
        name: "{{ user_mysql }}"
        comment: "Mysql service user"
        uid: 1041
      become: yes

    - name: "Prepare volume creation for mysql"
      file: path="{{ path_mysql_data }}" state=directory
      become: yes

    - name: "Creating mysql volume if not present"
      docker_volume:
        name: data_mysql
        state: present
        driver_options:
          type: none
          device: "{{ path_mysql_data }}"
          o: bind
      become: yes

    - name: "Creating a mysql container"
      docker_container:
        name: mysql
        image: mysql
        state: started
        recreate: yes
        restart: yes
        env:
            MYSQL_ROOT_PASSWORD: "{{ password_mysql_root }}"
        published_ports:
          - "{{ port_mysql }}:3306"
        volumes:
          - "data_mysql:/var/lib/mysql"
      become: yes

    - user: 
        name: service-photos
        comment: "Piwigo service user"
        uid: 1040
      become: yes

    - mysql_db:
        login_host: 127.0.0.1
        login_user: root
        login_password: "{{ password_mysql_root }}"
        login_port:  "{{ port_mysql }}"
        name: service-photos
        state: present
      retries: 5
      delay: 4
      register: result
      until: result|succeeded
      ignore_errors: yes
    
    - name: "Prepare volume creation"
      file: path="{{ path_photos_pictures }}" state=directory
      become: yes

    - name: "Prepare volume creation"
      file: path="{{ path_photos_config }}" state=directory
      become: yes

    - name: "Creating piwigo volume if not present"
      docker_volume:
        name: data_photos_pictures
        state: present
        driver_options:
          type: none
          device: "{{ path_photos_pictures }}"
          o: bind
      become: yes

    - name: "Creating piwigo volume for config if not present"
      docker_volume:
        name: data_photos_config
        state: present
        driver_options:
          type: none
          device: "{{ path_photos_config }}"
          o: bind
      become: yes

    - name: "Creating piwigo container"
      docker_container:
        name: photos-server
        image: linuxserver/piwigo
        state: started
        recreate: yes
        restart: yes
        env:
            PGID: 1040
            PUID: 1040
            TZ: "UTC"
        links:
          - "mysql:piwigo_mysql"
        published_ports:
          - "{{ port_photos }}:80"
        volumes:
          - "data_photos_config:/config"
          - "data_photos_photos:/pictures"
          - /etc/localtime:/etc/localtime:ro 
      become: yes
    
    - mysql_db:
        login_host: 127.0.0.1
        login_user: root
        login_password:  "{{ password_mysql_root }}"
        login_port:  "{{ port_mysql }}"
        name: service-nextcloud
        state: present

    - name: "Prepare volume creation for nextcloud"
      file: path="{{ path_nextcloud_data }}" state=directory
      become: yes

    - user: 
        name: '{{ user_nextcloud }}'
        comment: "Nextcloud service user"
        uid: 1042
      become: yes
    
    - name: "Creating nextcloud volume if not present"
      docker_volume:
        name: data_nextcloud
        state: present
        driver_options:
          type: none
          device: "{{ path_nextcloud_data }}"
          o: bind
      become: yes

    - name: "Creating nextcloud container"
      docker_container:
        name: storage-server
        image: nextcloud
        state: started
        recreate: yes
        restart: yes
        published_ports:
          - "{{ port_nextcloud }}:80"
        links:
          - "mysql:nextcloud_mysql"
        volumes:
          - data_nextcloud:/var/www/html 
      become: yes

    - name: "Creating subdomains"
      apache2_module:
        state: present
        name: proxy_http

- name: "create virtual host file"
  hosts: all
  roles:
    - reverseproxy
