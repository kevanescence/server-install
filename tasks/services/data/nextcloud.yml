#- name: "Copy existing photos data"
#  remote_user: "{{ansible_ssh_user}}"
#  synchronize:
#    mode: push
#    src: "{{initial_data}}/nextcloud/"
#    dest: "{{ansible_ssh_user}}@{{inventory_hostname}}:/home/{{user_nextcloud}}/config/www/gallery"
#    recursive: yes
#    rsync_path: "sudo rsync --rsh 'ssh -S none -o StrictHostKeyChecking=no -o Port={{ansible_ssh_port}}'"
#    rsync_opts:
#      - "--exclude=_data"
#  become: yes

- name: "Setting ownership"
  file: dest="/home/{{user_nextcloud}}/config" owner=root group=root mode=0770 recurse=yes
  become: yes

- name: "Copy Nextcloud SQL data file"
  copy:
    src: "{{initial_data}}/nextcloud.sql"
    dest: "/home/{{user_nextcloud}}/nextcloud.sql"
    owner: '{{user_nextcloud}}'
    group: '{{user_nextcloud}}'
    mode: 0770
    force: yes
  become: yes

- name: "Retrieving date of existing Nextcloud DB dump"
  shell: grep "Dump completed on" "/home/{{user_nextcloud}}/nextcloud.sql"|tail -1 |awk -F 'on ' '{print $2}'
  register: nextcloud_sqldump_lookup
  become: yes
  ignore_errors:  no

- fail:
    msg: "Did not find any dump information (Looking for Dump completed on) in remote /home/{{user_nextcloud}}/nextcloud.sql file"
  when: nextcloud_sqldump_lookup.stdout == ''

- debug: msg="{{nextcloud_sqldump_lookup}}"

- name: "Retrieving last modification date of existing nextcloud SQL tables"
  command: mysql -h 127.0.0.1 -u root -p{{ password_mysql_root }} {{user_nextcloud}} -Ns -e "{{sql}}"
  vars:
    sql: "SELECT UPDATE_TIME FROM information_schema.tables where TABLE_NAME != 'authtoken' order by UPDATE_TIME desc limit 1;"
  register: nextcloud_table_last_modified_lookup

- name: "Create mysql database for Nextcloud"
  mysql_db:
    login_host: 127.0.0.1
    login_user: root
    login_password: "{{ password_mysql_root }}"
    login_port:  "{{ port_mysql }}"
    name: '{{user_nextcloud}}'
    state: import
    target: '/home/{{user_nextcloud}}/nextcloud.sql'
  when: nextcloud_sqldump_lookup.stdout > nextcloud_table_last_modified_lookup.stdout
  become: yes
